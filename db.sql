-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.admin_bank_accounts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  account_name character varying NOT NULL,
  account_number character varying,
  bank_name character varying,
  bank_type USER-DEFINED NOT NULL,
  currency USER-DEFINED NOT NULL DEFAULT 'BDT'::currency_type,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  branch_name character varying,
  routing_number character varying,
  ifsc_code character varying,
  swift_code character varying,
  upi_id character varying,
  mobile_number character varying,
  bank_address text,
  zipcode character varying,
  daily_limit numeric DEFAULT 1000000.00,
  monthly_limit numeric DEFAULT 30000000.00,
  CONSTRAINT admin_bank_accounts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.deposit_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  transaction_id uuid NOT NULL,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  currency USER-DEFINED NOT NULL DEFAULT 'BDT'::currency_type,
  sender_name character varying NOT NULL,
  transaction_ref character varying NOT NULL,
  admin_bank_account_id uuid NOT NULL,
  status USER-DEFINED DEFAULT 'PENDING'::transaction_status,
  admin_notes text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  screenshot_url text,
  processed_by uuid,
  processed_at timestamp without time zone,
  rejection_reason character varying,
  admin_feedback text,
  CONSTRAINT deposit_requests_pkey PRIMARY KEY (id),
  CONSTRAINT deposit_requests_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT deposit_requests_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.transactions(id),
  CONSTRAINT deposit_requests_admin_bank_account_id_fkey FOREIGN KEY (admin_bank_account_id) REFERENCES public.admin_bank_accounts(id),
  CONSTRAINT deposit_requests_processed_by_fkey FOREIGN KEY (processed_by) REFERENCES auth.users(id)
);
CREATE TABLE public.exchange_rates (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  from_currency USER-DEFINED NOT NULL,
  to_currency USER-DEFINED NOT NULL,
  rate numeric NOT NULL CHECK (rate > 0::numeric),
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT exchange_rates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.exchange_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  transaction_id uuid NOT NULL,
  from_currency USER-DEFINED NOT NULL,
  to_currency USER-DEFINED NOT NULL,
  from_amount numeric NOT NULL CHECK (from_amount > 0::numeric),
  to_amount numeric NOT NULL CHECK (to_amount > 0::numeric),
  exchange_rate numeric NOT NULL,
  status USER-DEFINED DEFAULT 'PENDING'::transaction_status,
  admin_notes text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  processed_by uuid,
  processed_at timestamp without time zone,
  rejection_reason character varying,
  admin_feedback text,
  CONSTRAINT exchange_requests_pkey PRIMARY KEY (id),
  CONSTRAINT exchange_requests_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT exchange_requests_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.transactions(id),
  CONSTRAINT exchange_requests_processed_by_fkey FOREIGN KEY (processed_by) REFERENCES auth.users(id)
);
CREATE TABLE public.rejection_reasons (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  category character varying NOT NULL CHECK (category::text = ANY (ARRAY['DEPOSIT'::character varying, 'WITHDRAWAL'::character varying, 'EXCHANGE'::character varying]::text[])),
  reason character varying NOT NULL,
  description text,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT rejection_reasons_pkey PRIMARY KEY (id)
);
CREATE TABLE public.request_history (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  request_type character varying NOT NULL CHECK (request_type::text = ANY (ARRAY['DEPOSIT'::character varying, 'WITHDRAWAL'::character varying, 'EXCHANGE'::character varying]::text[])),
  request_id uuid NOT NULL,
  previous_status character varying,
  new_status character varying NOT NULL,
  admin_id uuid,
  admin_notes text,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT request_history_pkey PRIMARY KEY (id),
  CONSTRAINT request_history_admin_id_fkey FOREIGN KEY (admin_id) REFERENCES auth.users(id)
);
CREATE TABLE public.transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['DEPOSIT'::character varying, 'WITHDRAWAL'::character varying, 'EXCHANGE'::character varying]::text[])),
  status USER-DEFINED DEFAULT 'PENDING'::transaction_status,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  currency USER-DEFINED NOT NULL,
  from_currency USER-DEFINED,
  to_currency USER-DEFINED,
  exchange_rate numeric,
  converted_amount numeric,
  bank_account_id uuid,
  admin_bank_account_id uuid,
  reference_number character varying,
  processed_at timestamp without time zone,
  admin_notes text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT transactions_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT transactions_bank_account_id_fkey FOREIGN KEY (bank_account_id) REFERENCES public.user_bank_accounts(id),
  CONSTRAINT transactions_admin_bank_account_id_fkey FOREIGN KEY (admin_bank_account_id) REFERENCES public.admin_bank_accounts(id)
);
CREATE TABLE public.user_bank_accounts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  account_name character varying NOT NULL,
  account_number character varying,
  bank_name character varying,
  bank_type USER-DEFINED NOT NULL DEFAULT 'BANK'::bank_type,
  currency USER-DEFINED NOT NULL DEFAULT 'BDT'::currency_type,
  is_verified boolean DEFAULT false,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  branch_name character varying,
  routing_number character varying,
  ifsc_code character varying,
  swift_code character varying,
  upi_id character varying,
  mobile_number character varying,
  bank_address text,
  zipcode character varying,
  CONSTRAINT user_bank_accounts_pkey PRIMARY KEY (id),
  CONSTRAINT user_bank_accounts_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  full_name character varying,
  phone character varying,
  is_verified boolean DEFAULT false,
  kyc_status character varying DEFAULT 'UNVERIFIED'::character varying,
  daily_deposit_limit numeric DEFAULT 100000.00,
  daily_withdrawal_limit numeric DEFAULT 50000.00,
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  role character varying DEFAULT 'USER'::character varying CHECK (role::text = ANY (ARRAY['USER'::character varying, 'ADMIN'::character varying, 'SUPER_ADMIN'::character varying]::text[])),
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT user_profiles_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.wallets (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  bdt_balance numeric DEFAULT 0.00 CHECK (bdt_balance >= 0::numeric),
  inr_balance numeric DEFAULT 0.00 CHECK (inr_balance >= 0::numeric),
  is_active boolean DEFAULT true,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT wallets_pkey PRIMARY KEY (id),
  CONSTRAINT wallets_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.withdrawal_requests (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  user_id uuid NOT NULL,
  transaction_id uuid NOT NULL,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  currency USER-DEFINED NOT NULL DEFAULT 'BDT'::currency_type,
  bank_account_id uuid NOT NULL,
  status USER-DEFINED DEFAULT 'PENDING'::transaction_status,
  admin_notes text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  processed_by uuid,
  processed_at timestamp without time zone,
  rejection_reason character varying,
  admin_feedback text,
  CONSTRAINT withdrawal_requests_pkey PRIMARY KEY (id),
  CONSTRAINT withdrawal_requests_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT withdrawal_requests_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.transactions(id),
  CONSTRAINT withdrawal_requests_bank_account_id_fkey FOREIGN KEY (bank_account_id) REFERENCES public.user_bank_accounts(id),
  CONSTRAINT withdrawal_requests_processed_by_fkey FOREIGN KEY (processed_by) REFERENCES auth.users(id)
);